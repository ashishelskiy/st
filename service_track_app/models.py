from django.contrib.auth.models import AbstractUser
from django.db import models
from django.core.validators import RegexValidator
from phonenumber_field.modelfields import PhoneNumberField
from django.core.validators import FileExtensionValidator


class CustomUser(AbstractUser):
    ROLE_CHOICES = (
        ('dealer', '–î–∏–ª–µ—Ä'),
        ('service_center', '–°–µ—Ä–≤–∏—Å–Ω—ã–π —Ü–µ–Ω—Ç—Ä'),
    )
    role = models.CharField(max_length=20, choices=ROLE_CHOICES, default='dealer')

    # def __str__(self):
    #     return f"{self.username} ({self.get_role_display()})"
    # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –∫–æ–º–ø–∞–Ω–∏–∏
    dealer_company = models.ForeignKey("DealerCompany", on_delete=models.SET_NULL, null=True, blank=True, related_name="users")

    def __str__(self):
        if self.role == "dealer" and self.dealer_company:
            return f"{self.username} ({self.get_role_display()} - {self.dealer_company.name})"
        return f"{self.username} ({self.get_role_display()})"


class DealerCompany(models.Model):
    code = models.CharField("–ö–æ–¥", max_length=50, unique=True)
    name = models.CharField("–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ", max_length=255)
    inn = models.CharField("–ò–ù–ù", max_length=20, blank=True, null=True)
    full_name = models.CharField("–ü–æ–ª–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ", max_length=255, blank=True, null=True)
    document = models.CharField("–î–æ–∫—É–º–µ–Ω—Ç, —É–¥–æ—Å—Ç–æ–≤–µ—Ä—è—é—â–∏–π –ª–∏—á–Ω–æ—Å—Ç—å", max_length=255, blank=True, null=True)
    relation_type = models.CharField("–¢–∏–ø –æ—Ç–Ω–æ—à–µ–Ω–∏–π", max_length=50, blank=True, null=True)  # –ü–æ–∫—É–ø–∞—Ç–µ–ª—å / –ü–æ—Å—Ç–∞–≤—â–∏–∫
    region = models.CharField("–†–µ–≥–∏–æ–Ω", max_length=100, blank=True, null=True)
    is_active = models.BooleanField("–ê–∫—Ç–∏–≤–µ–Ω", default=True)

    def __str__(self):
        return self.name


class Package(models.Model):
    created_at = models.DateTimeField(auto_now_add=True)  # –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–∫–µ—Ç–∞
    dealer_company = models.ForeignKey("DealerCompany", on_delete=models.SET_NULL, null=True, blank=True)
    created_by = models.ForeignKey("CustomUser", on_delete=models.SET_NULL, null=True, blank=True)

    def __str__(self):
        return f"–ü–∞–∫–µ—Ç #{self.id} ‚Äî {self.created_at.strftime('%d.%m.%Y %H:%M')}"

    @property
    def request_count(self):
        # 'requests' ‚Äî —ç—Ç–æ related_name –∏–∑ RepairRequest.package
        return self.requests.count()


phone_validator = RegexValidator(
    regex=r'^\+?\d{1,4}?[-\s]?\(?\d{1,3}?\)?[-\s]?\d{1,4}[-\s]?\d{1,4}[-\s]?\d{1,9}$',
    message="–¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7 (999) 123-45-67"
)

class RepairRequest(models.Model):
    STATUS_CHOICES = [
        ('accepted_by_dealer', '–¢–æ–≤–∞—Ä –ø—Ä–∏–Ω—è—Ç –¥–∏–ª–µ—Ä–æ–º'),
        ('waiting', '–û–∂–∏–¥–∞–µ—Ç'),
        ('sent_to_service', '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Å–µ—Ä–≤–∏—Å–Ω—ã–π —Ü–µ–Ω—Ç—Ä'),
        ('closed', '–ó–∞–∫—Ä—ã—Ç–∞'),
        ('rejected', '–û—Ç–∫–ª–æ–Ω–µ–Ω–∞'),
    ]

    status = models.CharField(
        "–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏",
        max_length=20,
        choices=STATUS_CHOICES,
        default='accepted_by_dealer'  # –≠—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø—Ä–∏—Å–≤–æ–µ–Ω–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    )

    WARRANTY_CHOICES = [
        ('warranty', '–ù–∞ –≥–∞—Ä–∞–Ω—Ç–∏—é'),
        ('paid_repair', '–ù–∞ –ø–ª–∞—Ç–Ω—ã–π —Ä–µ–º–æ–Ω—Ç'),
        # ('expired', '–ì–∞—Ä–∞–Ω—Ç–∏—è –∏—Å—Ç–µ–∫–ª–∞'),
        ('unknown', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'),
    ]

    serial_number = models.CharField("–°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–æ–≤–∞—Ä–∞", max_length=50)
    model_name = models.CharField("–ú–æ–¥–µ–ª—å —Ç–æ–≤–∞—Ä–∞", max_length=100)
    purchase_date = models.DateField("–î–∞—Ç–∞ –ø–æ–∫—É–ø–∫–∏")
    warranty_status = models.CharField(
        "–°—Ç–∞—Ç—É—Å –≥–∞—Ä–∞–Ω—Ç–∏–∏",
        max_length=20,
        choices=WARRANTY_CHOICES
    )
    problem_description = models.TextField("–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏")

    customer_name = models.CharField("–§–ò–û –ø–æ–∫—É–ø–∞—Ç–µ–ª—è", max_length=150)
    # customer_phone = models.CharField("–¢–µ–ª–µ—Ñ–æ–Ω", max_length=30)
    customer_phone = PhoneNumberField("–¢–µ–ª–µ—Ñ–æ–Ω –ø–æ–∫—É–ø–∞—Ç–µ–ª—è", blank=False)
    customer_email = models.EmailField("Email –ø–æ–∫—É–ø–∞—Ç–µ–ª—è", blank=True, null=True)

    # dealer_name = models.CharField("–ù–∞–∑–≤–∞–Ω–∏–µ –¥–∏–ª–µ—Ä–∞", max_length=150)
    # dealer_city = models.CharField("–ì–æ—Ä–æ–¥", max_length=100)

    additional_notes = models.TextField("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—á–∞–Ω–∏—è", blank=True, null=True)
    created_at = models.DateTimeField("–°–æ–∑–¥–∞–Ω–∞", auto_now_add=True)

    # üîë –ù–æ–≤–∞—è —Å–≤—è–∑—å
    dealer_company = models.ForeignKey(
        "DealerCompany",
        on_delete=models.CASCADE,
        related_name="requests",
        verbose_name="–ö–æ–º–ø–∞–Ω–∏—è –¥–∏–ª–µ—Ä–∞",
        null=True, blank=True
    )

    created_by = models.ForeignKey(
        "CustomUser",
        on_delete=models.SET_NULL,
        null=True, blank=True,
        related_name="created_requests",
        verbose_name="–°–æ–∑–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
    )
    sent_at = models.DateTimeField("–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏", null=True, blank=True)
    package = models.ForeignKey(Package, on_delete=models.SET_NULL, null=True, blank=True, related_name="requests")

    def __str__(self):
        return f"–ó–∞—è–≤–∫–∞ #{self.id} ‚Äî {self.serial_number}"


class RepairRequestPhoto(models.Model):
    repair_request = models.ForeignKey(RepairRequest, on_delete=models.CASCADE, related_name='photos')
    photo = models.ImageField("–§–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞", upload_to='repair_photos/')

    def __str__(self):
        return f"–§–æ—Ç–æ –¥–ª—è {self.repair_request.serial_number}"


class RepairRequestVideo(models.Model):
    repair_request = models.ForeignKey(RepairRequest, on_delete=models.CASCADE, related_name='videos')
    video = models.FileField(
        "–í–∏–¥–µ–æ —Ç–æ–≤–∞—Ä–∞",
        upload_to='repair_videos/',
        validators=[
            FileExtensionValidator(allowed_extensions=['mp4', 'avi', 'mov', 'wmv']),
        ]
    )

    def __str__(self):
        return f"–í–∏–¥–µ–æ –¥–ª—è {self.repair_request.serial_number}"


class RequestHistory(models.Model):
    STATUS_CHOICES = [
        ('accepted_by_dealer', '–¢–æ–≤–∞—Ä –ø—Ä–∏–Ω—è—Ç –¥–∏–ª–µ—Ä–æ–º'),
        ('waiting', '–û–∂–∏–¥–∞–µ—Ç'),
        ('sent_to_service', '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Å–µ—Ä–≤–∏—Å–Ω—ã–π —Ü–µ–Ω—Ç—Ä'),
        ('closed', '–ó–∞–∫—Ä—ã—Ç–∞'),
        ('rejected', '–û—Ç–∫–ª–æ–Ω–µ–Ω–∞'),
    ]

    repair_request = models.ForeignKey('RepairRequest', on_delete=models.CASCADE, related_name='history')
    changed_by = models.ForeignKey('CustomUser', on_delete=models.SET_NULL, null=True)
    old_status = models.CharField(max_length=50, blank=True, null=True, choices=STATUS_CHOICES)
    new_status = models.CharField(max_length=50, choices=STATUS_CHOICES)
    comment = models.TextField(blank=True, null=True)
    changed_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"–ò—Å—Ç–æ—Ä–∏—è –∑–∞—è–≤–∫–∏ #{self.repair_request.id} ‚Äî {self.new_status} ({self.changed_at})"

# class SendPackage(models.Model):
#     sent_at = models.DateTimeField(auto_now_add=True)
#     comment = models.CharField(max_length=255, blank=True, null=True)
#
#     def __str__(self):
#         return f"–ü–∞–∫–µ—Ç {self.id} –æ—Ç {self.sent_at.strftime('%d.%m.%Y %H:%M')}"
